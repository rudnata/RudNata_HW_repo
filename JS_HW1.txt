'number' + 3 + 3 // number33 (Спочатку відбувається конкатенація стрінги та числа, в результаті маємо стрінгу 'number3'. Те саме з другим додаванням.)

null + 3 // 3 (null to number=0, 0+3=3)

5 && "qwerty" // "qwerty" (обидва операнди && ture, повертається значення останнього)

+'40' + +'2' + "hillel"; // "42hillel" (+ перетворив стрінги на числа, 42 + стрінга= конкатенація)

'10' - 5 === 6; // false (5===6)

true + false // 1 (1+0)

'4px' - 3 // NaN (стрінга, яка не конвертується у число= NaN, операції з NaN повертають NaN)

'4' - 3 // 1 (для обчислення було використано значення стрінги 4-3=1)

'6' + 3 ** 0; //"61" (конкатенація стрінги "6" та результату обчислення 3**0=1)

12 / '6' //2 (для обчислення було взято значення стрінги як число 6)

'10' + (5 === 6); // "10false" (конкатенація стрінги та результату порівняння false)

null == '' // false ( Бо null==null або null==undefined )

3 ** (9 / 3); // 27 (Спочатку виконується обчислення у дужках, а потім зведення у ступінь 3**3)

!!'false' == !!'true' // true (Непуста стрінга, включаючи лише знак пробілу, відповідає булевому true. подвійне булеве перетворення !!true - це true )

0 || '0' && 1 // 1 (логічний оператор || поверне значення операнда true "0", наступний оператор && поверне останнє обчислене значення, бо обидва оперенди true)

(+null == false) < 1; // false (+ конвертує null у число 0, рівність 0==false дає true, true - цe 1, 1<1 виведе false )

false && true || true // true (false && true видає false, false || true видасть результат true. ||повертає true, якщо хоча б один з операндів є true, інакше повертає false)

false && (false || true); // false (тут маємо 2 операнда: False && (результат у дужках). логічний оператор && - повертає false, бо перший операнд є false. результат другого операнду || у дужках повертає true)

(+null == false) < 1 ** 5; // false (+ конвертує null у число 0,  рівність 0==false дає true, true - цe 1, 1<1**5 виведе false )